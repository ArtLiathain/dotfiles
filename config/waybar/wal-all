#!/bin/bash

# Force needed environment vars for Wayland apps
export XDG_RUNTIME_DIR="${XDG_RUNTIME_DIR:-/run/user/$(id -u)}"
export WAYLAND_DISPLAY="${WAYLAND_DISPLAY:-wayland-1}"  # change if your echo $WAYLAND_DISPLAY says otherwise
export DISPLAY="${DISPLAY:-:0}"

# === CONFIG ===
WALL="$1"
WAL_DIR="/home/xyris-brain/Pictures/Hyprshots/Wal"
WAL_THEME_NAME="oomox-colors-oomox"
GTK_THEME_DIR="$HOME/.themes"
OOMOX_PRESET="$HOME/.cache/wal/colors-oomox.json"
KVANTUM_THEME_DIR="$HOME/.config/Kvantum"
GTK_SETTINGS="$HOME/.config/gtk-3.0/settings.ini"

# === 0. Pick random wallpaper if $1 is empty ===
if [ -z "$WALL" ]; then
    WALL=$(find "$WAL_DIR" -type f \( -iname "*.jpg" -o -iname "*.png" -o -iname "*.jpeg" \) | shuf -n 1)
fi

# === 1. Validate wallpaper ===
if [ ! -f "$WALL" ]; then
    echo "‚ùå No valid wallpaper found."
    exit 1
fi

echo "üñºÔ∏è  Using wallpaper: $WALL"

# Wait for Wayland socket before doing anything GUI-related
echo "‚è≥ Waiting for Wayland socket..."
while [ ! -S "$XDG_RUNTIME_DIR/$WAYLAND_DISPLAY" ]; do
    sleep 0.5
done

# === 2. Set wallpaper using swww ===
echo "üñºÔ∏è  Setting wallpaper..."
swww img "$WALL" --transition-type grow --transition-fps 120 --transition-duration 1

# === 3. Generate pywal theme ===
echo "üé® Generating Pywal theme..."
wal -i "$WALL" -e

# === 4. Build oomox theme ===
oomox-cli ~/.cache/wal/colors-oomox

# === 5. Install GTK theme ===
echo "üìÇ Installing GTK theme..."
mkdir -p "$GTK_THEME_DIR"
cp -r "$HOME/.themes/$WAL_THEME_NAME" "$GTK_THEME_DIR/" 2>/dev/null

# === 6. Apply GTK theme ===
echo "üéØ Applying GTK theme..."
unset GTK_THEME
gsettings set org.gnome.desktop.interface gtk-theme "$WAL_THEME_NAME" 2>/dev/null

mkdir -p "$(dirname "$GTK_SETTINGS")"
if [ -f "$GTK_SETTINGS" ]; then
    sed -i "s/^gtk-theme-name=.*/gtk-theme-name=$WAL_THEME_NAME/" "$GTK_SETTINGS"
else
    echo -e "[Settings]\ngtk-theme-name=$WAL_THEME_NAME" > "$GTK_SETTINGS"
fi

# === 7. Update Firefox Pywal theme ===
echo "ü¶ä Updating Firefox theme..."
pywalfox update

# === 8. Reload Waybar ===

echo "üîÉ Reloading Waybar..."
setsid waybar >/dev/null 2>&1 &
sleep 1
pkill -USR2 waybar

# === 9. Reload Rofi ===
if [ -f ~/.cache/wal/colors-rofi-dark.rasi ]; then
    echo "üé® Updating Rofi theme..."
    cp ~/.cache/wal/colors-rofi-dark.rasi ~/.config/rofi/colors.rasi
fi

# === 10. Reload Notification Daemons ===
echo "üîî Reloading notifications..."
pkill mako && mako & disown
pkill dunst && dunst & disown

# === 11. Reload Terminal Colors ===
if [ -f ~/.cache/wal/colors.sh ]; then
    echo "üñ•Ô∏è  Applying terminal colors..."
    source ~/.cache/wal/colors.sh
fi

# === 12. set CPU CASE COLOURS

sleep 3s
bash /home/xyris-brain/Apps/walall/walrgb.sh
